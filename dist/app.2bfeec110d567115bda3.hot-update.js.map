{"version":3,"sources":["webpack://yodda/./src/js/RenderGift.js"],"names":["RenderGift","opts","self","el","canvas","querySelector","modelName","model","callback","number","scale","size","getParentSize","renderer","getRenderer","camera","getCamera","loadModel","then","object","setupObject","set","position","rotation","Math","PI","castShadow","scene","getScene","add","update","amount","separationMultiplier","x","y","max","xInc","yInc","i","obj","clone","z","parentElement","getBoundingClientRect","width","height","name","Promise","resolve","reject","THREE","GLTFLoader","load","xhr","lengthComputable","percentComplete","loaded","total","traverse","child","receiveShadow","WebGLRenderer","alpha","setSize","setPixelRatio","window","devicePixelRatio","setClearColor","shadowMap","enabled","type","PCFSoftShadowMap","domElement","fov","aspect","near","far","PerspectiveCamera","lookAt","Vector3","Scene","bgColor","background","Color","zoom","updateProjectionMatrix","hemiLight","getHemiLight","ambientLight","getAmbientLight","spotLight","getSpotLight","plane","getPlane","light","HemisphereLight","color","intensity","AmbientLight","DirectionalLight","shadow","bias","mapSize","distance","angle","SpotLight","w","h","geometry","PlaneBufferGeometry","material","MeshStandardMaterial","mesh","Mesh","render","requestAnimationFrame"],"mappings":"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","file":"app.2bfeec110d567115bda3.hot-update.js","sourcesContent":["export default class RenderGift {\n  constructor(opts) {\n    const self = this;\n    self.el = opts.el;\n    self.canvas = self.el.querySelector('.scene');\n    self.modelName = opts.model;\n    self.callback = opts.callback;\n    self.number = 1200;\n    self.scale = 5;\n    self.model;\n\n    const size = self.getParentSize(self.el);\n    self.renderer = self.getRenderer(self.canvas, size);\n    self.camera = self.getCamera();\n    // self.gui = new dat.GUI();\n\n    self.loadModel(self.modelName)\n      .then(object => self.setupObject(object))\n      .then(object => {\n        self.model = object;\n        self.model.scale.set(self.scale, self.scale, self.scale);\n        self.model.position.set(0, 0, 0);\n        self.model.rotation.set(0, Math.PI / 4, 0);\n        self.model.castShadow = true;\n        const scene = self.getScene();\n        self.scene = scene;\n        self.scene.add(self.model);\n\n        // self.getBoxGrid(self.number, 1)\n\n        self.update(scene);\n      })\n\n\n  }\n\n  getBoxGrid(amount, separationMultiplier) {\n    const self = this;\n    var x = 0,\n      y = 0,\n      max = 0;\n    var xInc = 0,\n      yInc = 0;\n\n    for (var i = 0; i < amount; ++i) {\n      // console.log(i + \": (\" + x + \",\" + y + \")\");\n\n      var obj = self.model.clone(true);\n      obj.position.x = x * 4;\n      obj.position.z = y * 4;\n      // obj.position.y = y;\n      // obj.position.y = 0;\n      // obj.position.z = i * separationMultiplier;\n      obj.scale.set(self.scale, self.scale, self.scale);\n      // obj.rotation.set(Math.PI / 8, Math.PI / 4, 0);\n      obj.castShadow = true;\n      self.scene.add(obj);\n      if (max > 0) {\n        if (x === max && y === max) { // go down\n          xInc = 0;\n          yInc = -1;\n        } else if (x === max && y === -max) { // go left\n          xInc = -1;\n          yInc = 0;\n        } else if (x === -max && y === -max) { // go up\n          xInc = 0;\n          yInc = 1;\n        } else if (x === -max && y === max) { // go right\n          xInc = 1;\n          yInc = 0;\n        }\n\n        x += xInc;\n        y += yInc;\n      }\n\n      if (x === 0 && y === max) {\n        // go to next tier\n        ++max;\n        xInc = 1;\n        yInc = 0;\n        x = 0;\n        y = max;\n      }\n    }\n  }\n  getParentSize(parentElement) {\n    const self = this;\n    const {\n      width,\n      height\n    } = parentElement.getBoundingClientRect();\n    return {\n      width,\n      height\n    };\n  }\n  loadModel(name) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      new THREE.GLTFLoader().load(`models/${name}.gltf`,\n        function(object) {\n          resolve(object.scene);\n        },\n        // on progress\n        function(xhr) {\n          if (xhr.lengthComputable) {\n            var percentComplete = xhr.loaded / xhr.total * 100;\n          }\n        },\n        // on error\n        function(xhr) {\n          // console.log(xhr);\n          reject;\n        }\n      );\n    })\n  }\n  setupObject(object) {\n    object.traverse(function(child) {\n      child.receiveShadow = true;\n      child.castShadow = true;\n\n    })\n    return object;\n  }\n  getRenderer(canvas, size) {\n    const self = this;\n    const {\n      scale\n    } = self;\n    const {\n      width,\n      height\n    } = size;\n    const renderer = new THREE.WebGLRenderer({\n      canvas,\n      alpha: true,\n    });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0xffffff);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n    return renderer;\n  }\n  getCamera() {\n    const self = this;\n    const {\n      scale,\n      renderer\n    } = self;\n\n    // Use this for orthographic camera\n    const {\n      width,\n      height\n    } = renderer.domElement;\n\n    const fov = 45;\n    const aspect = renderer.domElement.width / renderer.domElement.height;\n    const near = 0.01;\n    const far = 1000;\n    const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    camera.position.set(0, 5, 7);\n    camera.lookAt(new THREE.Vector3(0, 0, 0));\n    return camera;\n  }\n  getScene() {\n    const self = this;\n    const {\n      camera,\n      scale,\n      model\n    } = self;\n\n    const {\n      renderer\n    } = self;\n\n    // Setup\n    const scene = new THREE.Scene();\n    const bgColor = 0xffffff;\n    scene.background = new THREE.Color(bgColor);\n\n    camera.zoom = 1.5;\n    camera.updateProjectionMatrix();\n\n    // Lights\n\n    const hemiLight = self.getHemiLight();\n    hemiLight.name = \"hemiLight\";\n    scene.add(hemiLight);\n\n    const ambientLight = self.getAmbientLight(0xffffff, 1);\n    ambientLight.name = \"ambientLight\";\n    scene.add(ambientLight);\n\n    const spotLight = self.getSpotLight(0xffffff, 0.4, 100, Math.PI / 3);\n    spotLight.name = \"spotLight\";\n    scene.add(spotLight);\n\n\n    // const thisSpotlight = self.gui.addFolder('spotlight');\n    // // lights.add(ambientLight, 'intensity', 0, 1);\n    // thisSpotlight.add(spotLight.rotation, 'x', -Math.PI, Math.PI);\n    // thisSpotlight.add(spotLight.rotation, 'y', -Math.PI, Math.PI);\n    // thisSpotlight.add(spotLight.rotation, 'z', -Math.PI, Math.PI);\n    // thisSpotlight.add(spotLight.position, 'x', -100, 100);\n    // thisSpotlight.add(spotLight.position, 'y', -100, 100);\n    // thisSpotlight.add(spotLight.position, 'z', -100, 100);\n\n\n    const plane = self.getPlane(1000, 1000, 0x4c95eb);\n    plane.name = \"plane\";\n    plane.receiveShadow = true;\n\n    // const thisPlane = self.gui.addFolder('plane');\n    // thisPlane.add(plane.rotation, 'x', -Math.PI, Math.PI);\n    // thisPlane.add(plane.rotation, 'y', -Math.PI, Math.PI);\n    // thisPlane.add(plane.rotation, 'z', -Math.PI, Math.PI);\n    // thisPlane.add(plane.position, 'x', -10, 10);\n    // thisPlane.add(plane.position, 'y', -10, 10);\n    // thisPlane.add(plane.position, 'z', -10, 10);\n\n\n    scene.add(plane);\n    return scene;\n  }\n  getHemiLight() {\n    const light = new THREE.HemisphereLight(0xFFFFFF, 0xFFFFFF);\n    light.position.set(0, 50, 0);\n    return light;\n  }\n  getAmbientLight(color, intensity) {\n    const light = new THREE.AmbientLight(color, intensity);\n    light.position.set(0, 0, 50);\n    return light;\n  }\n  getDirectionalLight(color, intensity) {\n    const light = new THREE.DirectionalLight(color, intensity);\n    light.position.set(-4, 11, 22);\n    light.castShadow = true;\n    light.shadow.bias = 0.001;\n    light.shadow.mapSize.width = 2048;\n    light.shadow.mapSize.height = 2048;\n    return light;\n  }\n  getSpotLight(color, intensity, distance, angle) {\n    // SpotLight( color : Integer, intensity : Float, distance : Float, angle : Radians, penumbra : Float, decay : Float )\n    const light = new THREE.SpotLight(color, intensity, distance, angle);\n    light.position.set(-8.7, 17.8, 27);\n    light.castShadow = true;\n    light.shadow.bias = 0.001;\n    light.shadow.mapSize.width = 2048;\n    light.shadow.mapSize.height = 2048;\n    return light;\n  }\n  getPlane(w, h, color) {\n    var geometry = new THREE.PlaneBufferGeometry(w, w, h, h);\n    var material = new THREE.MeshStandardMaterial({\n      color: color\n    })\n    var mesh = new THREE.Mesh(\n      geometry,\n      material\n    );\n\n    mesh.receiveShadow = true;\n\n    mesh.rotation.x = -Math.PI / 2;\n\n    return mesh;\n  }\n  update(scene) {\n    const self = this;\n    const {\n      renderer,\n      camera,\n    } = self;\n    renderer.render(scene, camera);\n    requestAnimationFrame(() => {\n      self.update(scene);\n      // self.callback;\n    });\n  }\n}"],"sourceRoot":""}