{"version":3,"sources":["webpack://water-jug/./src/scss/style.scss","webpack://water-jug/./node_modules/css-loader/lib/css-base.js"],"names":[],"mappings":";;;;;;;;;AAAA,2BAA2B,mBAAO,CAAC,gGAA+C;AAClF;;;AAGA;AACA,cAAc,QAAS,qBAAqB,gBAAgB,EAAE,2BAA2B,oBAAoB,EAAE,kCAAkC,oBAAoB,EAAE,0CAA0C,qCAAqC,EAAE,0CAA0C,uCAAuC,EAAE,0CAA0C,oBAAoB,yBAAyB,gCAAgC,sBAAsB,0BAA0B,EAAE,0CAA0C,oBAAoB,EAAE,+BAA+B,0DAA0D,EAAE,UAAU,mCAAmC,gCAAgC,2BAA2B,EAAE,0BAA0B,gCAAgC,6BAA6B,wBAAwB,EAAE,gBAAgB,gBAAgB,qBAAqB,cAAc,eAAe,cAAc,EAAE,UAAU,4BAA4B,gBAAgB,kBAAkB,wBAAwB,EAAE,iCAAiC,uBAAuB,gBAAgB,kBAAkB,uBAAuB,gBAAgB,EAAE,kBAAkB,8BAA8B,EAAE,aAAa,uBAAuB,aAAa,cAAc,qCAAqC,EAAE,4BAA4B,iBAAiB,+BAA+B,EAAE,qCAAqC,mBAAmB,EAAE;;AAEj9C;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;;AAElE;AACA","file":"app.b14ee127db190072f40a.hot-update.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".donations-chart {\\n  width: 100%; }\\n  .donations-chart rect {\\n    fill: #90b9f7; }\\n  .donations-chart path.domain {\\n    display: none; }\\n  .donations-chart .x.axis g.tick text {\\n    fill: rgba(255, 255, 255, 0.4); }\\n  .donations-chart .x.axis g.tick line {\\n    stroke: rgba(255, 255, 255, 0.4); }\\n  .donations-chart .y.axis g.tick text {\\n    fill: #83a8d2;\\n    text-anchor: start;\\n    text-transform: uppercase;\\n    font-size: 14px;\\n    letter-spacing: 1px; }\\n  .donations-chart .y.axis g.tick line {\\n    display: none; }\\n\\n.panel--city .kicker__hed {\\n  font-family: \\\"Roboto\\\", Arial, Helvetica, sans-serif; }\\n\\nhtml {\\n  -webkit-box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  box-sizing: border-box; }\\n\\n*, *:before, *:after {\\n  -webkit-box-sizing: inherit;\\n  -moz-box-sizing: inherit;\\n  box-sizing: inherit; }\\n\\nhtml, body {\\n  width: 100%;\\n  min-height: 100%;\\n  margin: 0;\\n  padding: 0;\\n  border: 0; }\\n\\nbody {\\n  background-color: white;\\n  color: blue;\\n  display: flex;\\n  flex-direction: row; }\\n\\n.panel--city,\\n.panel--gift {\\n  position: relative;\\n  width: 50vw;\\n  height: 100vh;\\n  text-align: center;\\n  color: #333; }\\n\\n.panel--gift {\\n  background-color: #4c95eb; }\\n\\n.header {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%); }\\n  .header .header__frame {\\n    opacity: 0;\\n    transition: opacity 0.5s; }\\n    .header .header__frame.active {\\n      opacity: 1; }\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n"],"sourceRoot":""}