{"version":3,"sources":["webpack://yodda/./src/js/RenderGift.js"],"names":["RenderGift","opts","self","el","canvas","querySelector","modelName","model","callback","number","scale","size","getParentSize","renderer","getRenderer","camera","getCamera","gui","dat","GUI","loadModel","then","object","setupObject","scene","getScene","getBoxGrid","amount","update","separationMultiplier","group","THREE","Group","i","obj","clone","position","x","y","geometry","parameters","height","set","rotation","Math","PI","castShadow","add","j","z","parentElement","getBoundingClientRect","width","name","Promise","resolve","reject","GLTFLoader","load","xhr","lengthComputable","percentComplete","loaded","total","traverse","child","receiveShadow","WebGLRenderer","alpha","setSize","setPixelRatio","window","devicePixelRatio","setClearColor","shadowMap","enabled","type","PCFSoftShadowMap","domElement","fov","aspect","near","far","PerspectiveCamera","lookAt","Vector3","Scene","bgColor","background","Color","zoom","updateProjectionMatrix","hemiLight","getHemiLight","ambientLight","getAmbientLight","spotLight","getSpotLight","thisSpotlight","addFolder","plane","getPlane","thisPlane","light","HemisphereLight","color","intensity","AmbientLight","DirectionalLight","shadow","bias","mapSize","distance","angle","SpotLight","w","h","PlaneBufferGeometry","material","MeshStandardMaterial","mesh","Mesh","render","requestAnimationFrame"],"mappings":"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","file":"app.5bffaad56e6f2c754515.hot-update.js","sourcesContent":["export default class RenderGift {\n  constructor(opts) {\n    const self = this;\n    self.el = opts.el;\n    self.canvas = self.el.querySelector('.scene');\n    self.modelName = opts.model;\n    self.callback = opts.callback;\n    self.number = 12;\n    self.scale = 5;\n    self.model;\n\n    const size = self.getParentSize(self.el);\n    self.renderer = self.getRenderer(self.canvas, size);\n    self.camera = self.getCamera();\n    self.gui = new dat.GUI();\n\n    self.loadModel(self.modelName)\n      .then(object => self.setupObject(object))\n      .then(object => {\n        // self.model = object;\n        // self.model.scale.set(self.scale, self.scale, self.scale);\n        // self.model.position.set(0, 0, 0);\n        // self.model.rotation.set(Math.PI / 8, Math.PI / 4, 0);\n        // self.model.castShadow = true;\n        const scene = self.getScene();\n        self.scene = scene;\n        self.getBoxGrid(object, self.scale, self.amount, 1)\n        // self.scene.add(items);\n        // some experiment\n        // const duplicate = self.model.clone(true);\n        // duplicate.scale.set(self.scale, self.scale, self.scale);\n        // duplicate.position.set(2, 0, 0);\n        // duplicate.rotation.set(Math.PI / 8, Math.PI / 4, 0);\n        // duplicate.castShadow = true;\n        // end of experiment\n\n        self.update(scene);\n      })\n\n\n  }\n\n  getBoxGrid(model, scale, amount, separationMultiplier) {\n    var group = new THREE.Group();\n    for (var i = 0; i < amount; i++) {\n      var obj = model.clone(true);\n      obj.position.x = i * separationMultiplier;\n      obj.position.y = obj.geometry.parameters.height / 2;\n      obj.scale.set(scale, scale, scale);\n      obj.rotation.set(Math.PI / 8, Math.PI / 4, 0);\n      obj.castShadow = true;\n      group.add(obj);\n      for (var j = 1; j < amount; j++) {\n        var obj = model.clone(true);\n        obj.scale.set(scale, scale, scale);\n        obj.rotation.set(Math.PI / 8, Math.PI / 4, 0);\n        obj.castShadow = true;\n        obj.position.x = i * separationMultiplier;\n        obj.position.y = obj.geometry.parameters.height / 2;\n        obj.position.z = j * separationMultiplier;\n        group.add(obj);\n      }\n    }\n    group.position.x = -(separationMultiplier * (amount - 1)) / 2;\n    group.position.z = -(separationMultiplier * (amount - 1)) / 2;\n\n    return group;\n  }\n  getParentSize(parentElement) {\n    const self = this;\n    const {\n      width,\n      height\n    } = parentElement.getBoundingClientRect();\n    return {\n      width,\n      height\n    };\n  }\n  loadModel(name) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      new THREE.GLTFLoader().load(`models/${name}.gltf`,\n        function(object) {\n          resolve(object.scene);\n        },\n        // on progress\n        function(xhr) {\n          if (xhr.lengthComputable) {\n            var percentComplete = xhr.loaded / xhr.total * 100;\n          }\n        },\n        // on error\n        function(xhr) {\n          // console.log(xhr);\n          reject;\n        }\n      );\n    })\n  }\n  setupObject(object) {\n    object.traverse(function(child) {\n      child.receiveShadow = true;\n      child.castShadow = true;\n\n    })\n    return object;\n  }\n  getRenderer(canvas, size) {\n    const self = this;\n    const {\n      scale\n    } = self;\n    const {\n      width,\n      height\n    } = size;\n    const renderer = new THREE.WebGLRenderer({\n      canvas,\n      alpha: true,\n    });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0xffffff);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n    return renderer;\n  }\n  getCamera() {\n    const self = this;\n    const {\n      scale,\n      renderer\n    } = self;\n\n    // Use this for orthographic camera\n    const {\n      width,\n      height\n    } = renderer.domElement;\n\n    const fov = 45;\n    const aspect = renderer.domElement.width / renderer.domElement.height;\n    const near = 0.01;\n    const far = 1000;\n    const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n    camera.position.set(0, 0, 10);\n    camera.lookAt(new THREE.Vector3(0, 0, 0));\n    return camera;\n  }\n  getScene() {\n    const self = this;\n    const {\n      camera,\n      scale,\n      model\n    } = self;\n\n    const {\n      renderer\n    } = self;\n\n    // Setup\n    const scene = new THREE.Scene();\n    const bgColor = 0xffffff;\n    scene.background = new THREE.Color(bgColor);\n\n    camera.zoom = 1.5;\n    camera.updateProjectionMatrix();\n\n    // Lights\n\n    const hemiLight = self.getHemiLight();\n    hemiLight.name = \"hemiLight\";\n    scene.add(hemiLight);\n\n    const ambientLight = self.getAmbientLight(0xffffff, 1);\n    ambientLight.name = \"ambientLight\";\n    scene.add(ambientLight);\n\n    const spotLight = self.getSpotLight(0xffffff, 0.4, 100, Math.PI / 3);\n    spotLight.name = \"spotLight\";\n    scene.add(spotLight);\n    //\n    // const directionalLight = self.getDirectionalLight(0xffffff, 1);\n    // directionalLight.name = \"directionalLight\";\n    // scene.add(directionalLight);\n\n    const thisSpotlight = self.gui.addFolder('spotlight');\n    // lights.add(ambientLight, 'intensity', 0, 1);\n    thisSpotlight.add(spotLight.rotation, 'x', -Math.PI, Math.PI);\n    thisSpotlight.add(spotLight.rotation, 'y', -Math.PI, Math.PI);\n    thisSpotlight.add(spotLight.rotation, 'z', -Math.PI, Math.PI);\n    thisSpotlight.add(spotLight.position, 'x', -100, 100);\n    thisSpotlight.add(spotLight.position, 'y', -100, 100);\n    thisSpotlight.add(spotLight.position, 'z', -100, 100);\n\n\n    const plane = self.getPlane(1000, 1000, 0x4c95eb);\n    plane.name = \"plane\";\n    plane.receiveShadow = true;\n\n    const thisPlane = self.gui.addFolder('plane');\n    thisPlane.add(plane.rotation, 'x', -Math.PI, Math.PI);\n    thisPlane.add(plane.rotation, 'y', -Math.PI, Math.PI);\n    thisPlane.add(plane.rotation, 'z', -Math.PI, Math.PI);\n\n    scene.add(plane);\n    return scene;\n  }\n  getHemiLight() {\n    const light = new THREE.HemisphereLight(0xFFFFFF, 0xFFFFFF);\n    light.position.set(0, 50, 0);\n    return light;\n  }\n  getAmbientLight(color, intensity) {\n    const light = new THREE.AmbientLight(color, intensity);\n    light.position.set(0, 0, 50);\n    return light;\n  }\n  getDirectionalLight(color, intensity) {\n    const light = new THREE.DirectionalLight(color, intensity);\n    light.position.set(-4, 11, 22);\n    light.castShadow = true;\n    light.shadow.bias = 0.001;\n    light.shadow.mapSize.width = 2048;\n    light.shadow.mapSize.height = 2048;\n    return light;\n  }\n  getSpotLight(color, intensity, distance, angle) {\n    // SpotLight( color : Integer, intensity : Float, distance : Float, angle : Radians, penumbra : Float, decay : Float )\n    const light = new THREE.SpotLight(color, intensity, distance, angle);\n    light.position.set(-8.7, 17.8, 27);\n    light.castShadow = true;\n    light.shadow.bias = 0.001;\n    light.shadow.mapSize.width = 2048;\n    light.shadow.mapSize.height = 2048;\n    return light;\n  }\n  getPlane(w, h, color) {\n    var geometry = new THREE.PlaneBufferGeometry(w, w, h, h);\n    var material = new THREE.MeshStandardMaterial({\n      color: color\n    })\n    var mesh = new THREE.Mesh(\n      geometry,\n      material\n    );\n\n    mesh.receiveShadow = true;\n\n    mesh.rotation.x = -1.17;\n\n    return mesh;\n  }\n  update(scene) {\n    const self = this;\n    const {\n      renderer,\n      camera,\n    } = self;\n    renderer.render(scene, camera);\n    requestAnimationFrame(() => {\n      self.update(scene);\n      // self.callback;\n    });\n  }\n}"],"sourceRoot":""}